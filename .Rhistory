Khan$ytrain
dat = data.frame(x=Khan$xtrain, y=as.factor(Khan$ytrain))
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Application to Gene Expression Data.R')
install.packages('e1071')
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Application to Gene Expression Data.R')
summary(svm.fit)
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Application to Gene Expression Data.R')
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Application to Gene Expression Data.R')
rep(1,10)
rep(1,10,10)
rep(-1,10,10)
rep(1:10,10,10)
rep(1:10,10)
rep(1:10,10,ncol=10)
rep(1:10,10)
install.packages("matlab")
library(matlab)
repmat(1,3,3)
repmat(matrix(1:4, 2, 2), 3)
repmat(1:3,1:3)
repmat(1:3,1:3,2)
repmat(1:3,1:3,1)
repmat(1:3,3)
repmat(3,3)
repmat(1,3)
repmat(1,3,2)
repmat(1:10,3,2)
meshgrid(1:10,1:10)
meshgrid(1:10,1:10,2)
meshgrid(1:10,1:10)
meshgrid(0:10,0:10)
points = meshgrid(0:10,0:10)
x1 = points$x
x2 = points$y
x1g = x1
x2g = x2
x1 = 0:10
x2 = 0:10
y = 1 + 3*x1 - x2
plot(y)
persp(x1,x2,y)
yg = 1 + 3*x1 - x2
persp(x1g,x2g,yg)
y
yg = 1 + 3*x1 - x2
yg
yg = 1 + 3*x1g - x2g
yg
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 1.R')
x1g
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 1.R')
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 1.R')
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 1.R')
x1
x2
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 1.R')
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 1.R')
x1g
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 1.R')
persp(x1g,x2g,yg)
yg
yg == 0
yg.which(yg == 0)
which.min(yg)
yg == 0
which(yg == 0)
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 1.R')
which(yg == 0)
yg == 0
plot(yg==0)
plot(which(yg==0))
which(yg==0, arr.ind=TRUE)
plot(which(yg==0, arr.ind=TRUE))
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 1.R')
plot(which(yg==0, arr.ind=TRUE))
which(yg==0, arr.ind=TRUE)
yg==0
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 1.R')
yg
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 1.R')
yg
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 1.R')
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 1.R')
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 1.R')
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 1.R')
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 1.R')
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 1.R')
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 1.R')
y2g
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 1.R')
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 1.R')
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 1.R')
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 1.R')
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 1.R')
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 2.R')
which(yg==4, arr.ind=TRUE)
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 2.R')
which(yg==4, arr.ind=TRUE)
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 2.R')
which(yg==4, arr.ind=TRUE)
yg
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 2.R')
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 2.R')
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 2.R')
x1 = seq(-xLimit,xLimit,0.1)
x1
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 2.R')
yg
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 2.R')
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 2.R')
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 2.R')
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 2.R')
yg
which(yg<4, arr.ind=TRUE)
which(yg<4, arr.ind=TRUE) - 10
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 2.R')
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 2.R')
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 2.R')
yg
which(yg<4, arr.ind=TRUE)-11
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 2.R')
yg
yg[11,11]
yg[12,10]
yg[13,13]
yg[13,20]
yg[14,20]
x1 = c(3,2,4,1,2,4,4)
x2 = c(4,2,4,4,1,3,1)
y = c(1,1,1,1,2,2,2)
plot(x1,x2,col=y)
plot(x1,x2,col=(y+1))
plot(x1,x2,col=(3-y))
plot(x1,x2,col=(3-y),xlim=c(0,5),ylim=c(0,5))
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 5.R')
x1
plot(x1)
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 5.R')
plot(x1,x2)
hist(x1)
plot(x1,x2)
y = ifelse(x2^2 - x1 > 0, 1, 0)
plot(x1,x2,col=y)
plot(x1,x2,col=(y=1))
plot(x1,x2,col=(y+1))
y
y = ifelse(x2^2 - x1 > 0, 1, 0)
x2
y = x2^2 - x1 > 0, 1, 0
y = x2^2 - x1 > 0
y
y1 = ifelse(y,1,0)
y1
y=y1
plot(x1,x2,col=(y+1))
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 5.R')
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 5.R')
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 5.R')
data
names(data)
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 5.R')
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 5.R')
dim(x1)[1]
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 5.R')
mean(lr.predict == y)
plot(lr.fit)
plot(lr.fit)
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 5.R')
abline(lr.fit)
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 5.R')
cbind(lr.predict,y)
cbind(lr.predict,cbind(y,predictedYType))
source('~/.active-rstudio-document')
cbind(lr.predict,cbind(y,predictedYType))
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 5.R')
lapply(cbind(lr.predict,y), classifyFunction)
apply(cbind(lr.predict,y), 1, classifyFunction)
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 5.R')
apply(cbind(lr.predict,y), 1, classifyFunction)
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 5.R')
apply(cbind(lr.predict,y), 1, classifyFunction)
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 5.R')
testFunction
testFunction(1)
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 5.R')
testFunction(1)
testFunction(0)
testFunction(500)
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 5.R')
apply(cbind(lr.predict,y), 1, classifyFunction)
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 5.R')
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 5.R')
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 5.R')
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 5.R')
abline(lr.fit)
line(lr.fit)
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 5.R')
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 5.R')
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 5.R')
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 5.R')
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 5.R')
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 5.R')
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 5.R')
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 5.R')
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 5.R')
abline(lr.fit)
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 5.R')
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 5.R')
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 5.R')
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 5.R')
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 5.R')
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 5.R')
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 5.R')
names(fullData)
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 5.R')
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 5.R')
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 5.R')
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 5.R')
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 5.R')
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 5.R')
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 5.R')
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 5.R')
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 5.R')
source('~/.active-rstudio-document')
tune.output
names(tune.output)
tune.output$best.parameters
tune.output$best.performance
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 5.R')
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 5.R')
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 5.R')
plot(svm.fit)
plot(svm.fit,fullData)
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 5.R')
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 5.R')
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 5.R')
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 6.R')
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 6.R')
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 6.R')
summary(tune.output)
names(tune.output)
names(tune.output)$performances
names(tune.output)$performances
tune.output$performances
tune.output$sampling
tune.output$best.model
names(summary(tune.output))
summary(tune.output)
summary(tune.output$performances)
names(tune.output$performances)
names(tune.output$performances$error)
(tune.output$performances$error
(tune.output$performances$error)
)
(tune.output$performances$error)
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 6.R')
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 6.R')
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 6.R')
fullData
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 6.R')
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 6.R')
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 6.R')
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 6.R')
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 6.R')
numberOfMisclassifications
tune.output
tune.output$performances
tune.output$performances$cost
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 6.R')
numberOfMisclassifications
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 6.R')
names(svm.fit)
svm.fit$decision.values
names(svm.fit)
svm.fit$coef0
names(svm.fit)
svm.fit$fitted
names(svm.fit)
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 6.R')
errorRate
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 6.R')
testErrorRates
plot(testErrorRates)
plot(testErrorRates,type='b')
which.min(testErrorRates)
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 6.R')
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 6.R')
testCostArray
plot(log(testCostArray)[-1], testErrorRates[-1],type='b')
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 7.R')
source('~/Dropbox/Programming/R/Statistical Learning/Chapter 9/Problems/Problem 7.R')
Auto
names(Auto)
Auto$mpg
median(Auto$mpg)
source('~/.active-rstudio-document')
y
source('~/.active-rstudio-document')
names(Auto)
is.element('highMPG', names(Auto))
a<-c(0,0,1,0,0,1,0,0,1,0)
a
length(a)
numeric(length(a))
?numeric
numeric(length = 2)
numeric(length = 1)
numeric(length = 3)
numeric(length = 10)
b = numeric(length = 10)
b[max(which(a != 0))] = 1
b
df = data.frame("group"=c('x','x','x','x','y','y','y','y','y'))
df
df$col = c('a','a','b','b','a','a','a','a','b')
df$col2 = c(22,23,16,18,11,12,16,45,24)
df
order(df$group)
order(df$col1)
names(df)
x = names(df)
x[2] = 'col1'
names(df) = x
df
order(df$col1)
library(faraway)
library(MASS)
?Boston
library(ggplot2)
install.packages('ggplot2')
library(ggplot2)
ggplot(data = Boston, aes(x = crim, y = medv))
ggplot(data = Boston, aes(x = crim, y = medv)) + geom_points()
ggplot(data = Boston, aes(x = crim, y = medv)) + geom_point()
ggplot(data = Boston, aes(x = crim, y = medv)) + geom_histogram()
ggplot(data = Boston, aes(x = crim, y = medv)) + geom_point()
plotmatrix(Boston())
plotmatrix(Boston
)
plotmatrix(Boston)
ggpairs(Boston)
install.packages('GGally')
library(GGally)
ggpairs(Boston())
ggpairs(Boston)
7681
ln(7681)
log(7681)
log(7681)/log(2)
log(7681)/log(3)
log(7681)/log(4)
log(7681)/log(5)
log(7681)/log()
log(7681)/log(6)
log(7680)/log(2)
log(7682)/log(2)
2^12
2^13
8192 - 7681
source('~/Dropbox/Programming/R/Machine learning with R/Chapter 7/ANN.R')
install.packages('neuralnet')
install.packages('neuralnet')
library(gplot)
install.packages('gplot')
a = c(1,2,3,4)
b = c(2,5)
findInterval(a, b)
a = 1:10
findInterval(a, b)
chickwts
aggregate(weight ~ feed, data = chickwts, FUN = mean)
dataText = "id X Y"
dataText = "id X Y
1 5 7
2 4 8
3 5 8"
read.table(header=TRUE, text=dataText)
data = read.table(header=TRUE, text=dataText)
data$X
row.names(data) = data$ix
row.names(data) = data$id
data
row.names(data) = data$X
data
data
row.names(data) = c('one','two','three')
data
1430466389 - 1427874389
1430466389 - 1433144789
source('~/Dropbox/Insight/WeightLossReddit/regressionTest.R')
fullData[fullData['weightChange'] < 0,]
maleLossData = fullData[fullData['weightChange'] < 0,]
View(maleLossData)
maleLossData = fullData[fullData['weightChange'] > 0,]
maleLossData = maleLossData[maleLossData['Gender'] == 'M',]
source('~/Dropbox/Insight/WeightLossReddit/regressionTest.R')
source('~/Dropbox/Insight/WeightLossReddit/regressionTest.R')
source('~/Dropbox/Insight/WeightLossReddit/regressionTest.R')
source('~/Dropbox/Insight/WeightLossReddit/regressionTest.R')
source('~/Dropbox/Insight/WeightLossReddit/regressionTest.R')
source('~/Dropbox/Insight/WeightLossReddit/regressionTest.R')
plot(maleLossData$weightChange, maleLossData$weightChange / maleLossData$TimeElapsedEpoch)
plot(maleLossData$weightChange, maleLossData$weightChange / (maleLossData$TimeElapsedEpoch)/(60*60*24*7))
(maleLossData$TimeElapsedEpoch)/(60*60*24*7)
plot(maleLossData$weightChange, maleLossData$weightChange / (maleLossData$TimeElapsedEpoch/((maleLossData$TimeElapsedEpoch)/(60*60*24*7))))
plot(maleLossData$weightChange, maleLossData$weightChange / maleLossData$TimeElapsedEpoch/((maleLossData$TimeElapsedEpoch)/(60*60*24*7)))
plot(maleLossData$weightChange, maleLossData$weightChange / maleLossData$TimeElapsedEpoch/((maleLossData$TimeElapsedEpoch)/(60*60*24*7)), ylim=c(0,2))
maleLossData$timeElapsedMonths = maleLossData$TimeElapsedEpoch / (60*60*24*7)
plot(maleLossData$weightChange, (maleLossData$weightChange / maleLossData$timeElapsedMonths), ylim=c(0,2))
plot(maleLossData$weightChange, (maleLossData$weightChange / maleLossData$timeElapsedMonths), ylim=c(0,3))
plot(maleLossData$weightChange, (maleLossData$weightChange / maleLossData$timeElapsedMonths), ylim=c(0,10))
plot(maleLossData$Age, (maleLossData$weightChange / maleLossData$timeElapsedMonths), ylim=c(0,10))
plot(maleLossData$startWeight, (maleLossData$weightChange / maleLossData$timeElapsedMonths), ylim=c(0,10))
plot(fullData$startWeight, fullData$weightChange, col=ifelse(fullData$Gender == 'M')
)
plot(fullData$startWeight, fullData$weightChange, col=ifelse(fullData$Gender == 'M',1,2))
plot(fullData$startWeight, fullData$weightChange, col=ifelse(fullData$Gender == 'M',1,2), ylim=c(0,300))
plot(fullData$startWeight, fullData$weightChange, col=ifelse(fullData$Gender == 'M',1,2), ylim=c(10,300))
plot(fullData$startWeight, fullData$weightChange, col=ifelse(fullData$Gender == 'M',1,2), ylim=c(10,300), xlab='Start Weight (lbs)')
plot(fullData$startWeight, fullData$weightChange, col=ifelse(fullData$Gender == 'M',1,2), ylim=c(10,300), xlab='Start Weight (lbs)', ylab='Weight Change (lbs)')
plot(fullData$startWeight, fullData$weightChange, col=ifelse(fullData$Gender == 'M',1,2), ylim=c(10,300), xlab='Start Weight (lbs)', ylab='Weight Change (lbs)',main='Weight Change by Start Weight')
plot(fullData$startWeight, fullData$weightChange, col=ifelse(fullData$Gender == 'M',1,2), ylim=c(10,300), xlab='Start Weight (lbs)', ylab='Weight Change (lbs)',main='Weight Change by Start Weight', legend='right')
plot(fullData$age, fullData$weightChange, col=ifelse(fullData$Gender == 'M',1,2), ylim=c(10,300), xlab='Start Weight (lbs)', ylab='Weight Change (lbs)',main='Weight Change by Start Weight')
plot(fullData$Age, fullData$weightChange, col=ifelse(fullData$Gender == 'M',1,2), ylim=c(10,300), xlab='Start Weight (lbs)', ylab='Weight Change (lbs)',main='Weight Change by Start Weight')
plot(fullData$Age, fullData$startWeight, col=ifelse(fullData$Gender == 'M',1,2), ylim=c(10,300), xlab='Start Weight (lbs)', ylab='Weight Change (lbs)',main='Weight Change by Start Weight')
plot(fullData$Age, fullData$startWeight, col=ifelse(fullData$Gender == 'M',1,2), xlab='Start Weight (lbs)', ylab='Weight Change (lbs)',main='Weight Change by Start Weight')
plot(fullData$Age, fullData$startWeight, col=ifelse(fullData$Gender == 'M',1,2))
plot(fullData$Age, fullData$startWeight, col=ifelse(fullData$Age == 'M',1,2))
plot(fullData$Age, fullData$startWeight, col=ifelse(fullData$Gender == 'M',1,2))
View(fullData)
View(fullData)
plot(fullData$Age, fullData$TimeElapsedEpoch, col=ifelse(fullData$Gender == 'M',1,2))
plot(fullData$Age, fullData$TimeElapsedEpoch/(3600*24*7), col=ifelse(fullData$Gender == 'M',1,2))
plot(fullData$Age, fullData$TimeElapsedEpoch/(3600*24*7), col=ifelse(fullData$Gender == 'M',1,2), ylim=c(0,400))
plot(fullData$Age, fullData$TimeElapsedEpoch/(3600*24*7*30), col=ifelse(fullData$Gender == 'M',1,2), ylim=c(0,400))
plot(fullData$Age, fullData$TimeElapsedEpoch/(3600*24*7*30), col=ifelse(fullData$Gender == 'M',1,2), ylim=c(0,52))
plot(fullData$Age, fullData$TimeElapsedEpoch/(3600*24*7*30), col=ifelse(fullData$Gender == 'M',1,2), ylim=c(0,25))
plot(fullData$Age, fullData$Height, col=ifelse(fullData$Gender == 'M',1,2), ylim=c(0,25))
plot(fullData$Age, fullData$Height, col=ifelse(fullData$Gender == 'M',1,2))
plot(fullData$startWeight, fullData$Height, col=ifelse(fullData$Gender == 'M',1,2))
plot(fullData$Gender, fullData$Height, col=ifelse(fullData$Gender == 'M',1,2))
plot(fullData$Gender, fullData$Height)
plot(fullData$Gender, fullData$Height, ylim=c(60,90))
plot(fullData$Gender, fullData$Height, ylim=c(50,90))
plot(fullData$Gender, fullData$Height, ylim=c(50,90), xlab='Gender',ylab='Height (inche)', main='Heights of Males and Females')
plot(fullData$startWeight, fullData$weightChange)
plot(fullData$startWeight, fullData$weightChange / (fullData$TimeElapsedEpoch / (3600*24*7*30)))
plot(fullData$startWeight, fullData$weightChange / (fullData$TimeElapsedEpoch / (3600*24*7*30)), ylim=c(0,100))
plot(fullData$startWeight, fullData$weightChange / (fullData$TimeElapsedEpoch / (3600*24*7*30)), ylim=c(0,200))
(fullData$TimeElapsedEpoch / (3600*24*7*30))
(fullData$TimeElapsedEpoch )
plot(fullData$startWeight, fullData$weightChange / (fullData$TimeElapsedEpoch / (3600*24*7*4)), ylim=c(0,200))
plot(fullData$startWeight, fullData$weightChange / (fullData$TimeElapsedEpoch / (3600*24*7*4)), ylim=c(0,50))
plot(fullData$startWeight, fullData$weightChange / (fullData$TimeElapsedEpoch / (3600*24*7*4)), ylim=c(0,20))
plot(fullData$Age, fullData$weightChange / (fullData$TimeElapsedEpoch / (3600*24*7*4)), ylim=c(0,20))
plot(fullData$endWeight, fullData$weightChange / (fullData$TimeElapsedEpoch / (3600*24*7*4)), ylim=c(0,20))
plot(fullData$startWeight, fullData$weightChange / (fullData$TimeElapsedEpoch / (3600*24*7*4)), ylim=c(0,20))
plot(fullData$Height, fullData$weightChange / (fullData$TimeElapsedEpoch / (3600*24*7*4)), ylim=c(0,20))
plot(fullData$Height, fullData$weightChange / (fullData$TimeElapsedEpoch / (3600*24*7*4)), ylim=c(0,20),xlim=c(50,90))
plot(fullData$Height, fullData$weightChange / (fullData$TimeElapsedEpoch / (3600*24*7*4)), ylim=c(0,20),xlim=c(50,90), xlab='Height (inches)', ylab='Weight Loss Rate (lbs/month)',main='Weight Loss Rate vs. Height')
plot(fullData$Height, fullData$weightChange / (fullData$TimeElapsedEpoch / (3600*24*7*4)), ylim=c(0,20),xlim=c(50,90), xlab='Height (inches)', ylab='Weight Loss Rate (lbs/month)',main='Weight Loss Rate vs. Height', col=ifelse(fullData$Gender == 'M',1,2))
summary(lm.fit)
plot(fullData$Height, fullData$weightChange, ylim=c(0,20),xlim=c(50,90), xlab='Height (inches)', ylab='Weight Loss Rate (lbs/month)',main='Weight Loss Rate vs. Height', col=ifelse(fullData$Gender == 'M',1,2))
plot(fullData$Height, fullData$weightChange, ylim=c(0,200),xlim=c(50,90), xlab='Height (inches)', ylab='Weight Loss Rate (lbs/month)',main='Weight Loss Rate vs. Height', col=ifelse(fullData$Gender == 'M',1,2))
plot(fullData$Height, fullData$weightChange, ylim=c(0,2000),xlim=c(50,90), xlab='Height (inches)', ylab='Weight Loss Rate (lbs/month)',main='Weight Loss Rate vs. Height', col=ifelse(fullData$Gender == 'M',1,2))
plot(fullData$Height, fullData$weightChange, ylim=c(0,200),xlim=c(50,90), xlab='Height (inches)', ylab='Weight Loss Rate (lbs/month)',main='Weight Loss Rate vs. Height', col=ifelse(fullData$Gender == 'M',1,2))
plot(fullData$Height, fullData$weightChange, ylim=c(0,300),xlim=c(50,90), xlab='Height (inches)', ylab='Weight Loss Rate (lbs/month)',main='Weight Loss Rate vs. Height', col=ifelse(fullData$Gender == 'M',1,2))
plot(fullData$startWeight, fullData$weightChange / (fullData$TimeElapsedEpoch / (3600*24*7*4)), ylim=c(0,20),xlim=c(50,90), xlab='Height (inches)', ylab='Weight Loss Rate (lbs/month)',main='Weight Loss Rate vs. Height', col=ifelse(fullData$Gender == 'M',1,2))
plot(fullData$startWeight, fullData$weightChange / (fullData$TimeElapsedEpoch / (3600*24*7*4)), ylim=c(0,20), xlab='Height (inches)', ylab='Weight Loss Rate (lbs/month)',main='Weight Loss Rate vs. Height', col=ifelse(fullData$Gender == 'M',1,2))
plot(fullData$startWeight, fullData$weightChange / (fullData$TimeElapsedEpoch / (3600*24*7*4)), ylim=c(0,20), xlab='Height (inches)', ylab='Weight Loss Rate (lbs/month)',main='Weight Loss Rate vs. Start Weight', col=ifelse(fullData$Gender == 'M',1,2))
plot(fullData$startWeight, fullData$weightChange / (fullData$TimeElapsedEpoch / (3600*24*7*4)), ylim=c(0,20), xlab='Start Weight (lbs)', ylab='Weight Loss Rate (lbs/month)',main='Weight Loss Rate vs. Start Weight', col=ifelse(fullData$Gender == 'M',1,2))
plot(fullData$Age, fullData$weightChange / (fullData$TimeElapsedEpoch / (3600*24*7*4)), ylim=c(0,20), xlab='Start Weight (lbs)', ylab='Weight Loss Rate (lbs/month)',main='Weight Loss Rate vs. Start Weight', col=ifelse(fullData$Gender == 'M',1,2))
plot(fullData$Age, fullData$weightChange, ylim=c(0,20), xlab='Start Weight (lbs)', ylab='Weight Loss Rate (lbs/month)',main='Weight Loss Rate vs. Start Weight', col=ifelse(fullData$Gender == 'M',1,2))
plot(fullData$Age, fullData$weightChange, ylim=c(0,200), xlab='Start Weight (lbs)', ylab='Weight Loss Rate (lbs/month)',main='Weight Loss Rate vs. Start Weight', col=ifelse(fullData$Gender == 'M',1,2))
View(fullData)
plot(fullData$Age, fullData$weightChange)
plot(fullData$Age, fullData$TimeElapsedEpoch)
plot(fullData$Age, fullData$TimeElapsedEpoch,ylim=c(0,1000000))
plot(fullData$Age, fullData$TimeElapsedEpoch,ylim=c(0,10000000))
plot(fullData$Age, fullData$TimeElapsedEpoch,ylim=c(0,100000000))
plot(fullData$Age, fullData$TimeElapsedEpoch,ylim=c(0,1000000000))
plot(fullData$Age, fullData$TimeElapsedEpoch,ylim=c(0,300000000))
plot(fullData$Age, fullData$TimeElapsedEpoch,ylim=c(0,200000000))
plot(fullData$Age, fullData$Gender)
plot(fullData$Gender, fullData$Age)
plot(fullData$Gender, fullData$Age, main='Age vs. Gender', xlab='Gender', ylab='Age')
plot(fullData$Gender, fullData$weightChange, main='Age vs. Gender', xlab='Gender', ylab='Age')
plot(fullData$Gender, fullData$TimeElapsedEpoch, main='Age vs. Gender', xlab='Gender', ylab='Age')
plot(fullData$Gender, fullData$TimeElapsedEpoch, main='Age vs. Gender', xlab='Gender', ylab='Age',ylim=c(0,50000000))
plot(fullData$Gender, fullData$TimeElapsedEpoch, main='Age vs. Gender', xlab='Gender', ylab='Age',ylim=c(0,100000000))
plot(fullData$Gender, fullData$TimeElapsedEpoch/(3600*24*7*4), main=' vs. Gender', xlab='Gender', ylab='Age',ylim=c(0,100000000))
plot(fullData$Gender, fullData$TimeElapsedEpoch/(3600*24*7*4), main=' vs. Gender', xlab='Gender', ylab='Age',ylim=c(0,50))
plot(fullData$Gender, fullData$TimeElapsedEpoch/(3600*24*7*4), main=' vs. Gender', xlab='Gender', ylab='Age',ylim=c(0,40))
plot(fullData$Gender, fullData$TimeElapsedEpoch/(3600*24*7*4), main='Time for Transformation vs. Gender', xlab='Gender', ylab='Time for transformation (months)',ylim=c(0,40))
plot(fullData$Gender, fullData$TimeElapsedEpoch/(3600*24*7*4), main='Duration of Weight Loss vs. Gender', xlab='Gender', ylab='Duration (months)',ylim=c(0,40))
source('~/Dropbox/Insight/WeightLossReddit/regressionTest.R')
abline(lm.fit)
source('~/Dropbox/Insight/WeightLossReddit/regressionTest.R')
summary(lm.fit)
source('~/Dropbox/Insight/WeightLossReddit/regressionTest.R')
summary(lm.fit)
source('~/Dropbox/Insight/WeightLossReddit/regressionTest.R')
summary(lm.fit)
source('~/.active-rstudio-document')
plot(fullData$Age, fullData$weightChange, main='Time for Transformation vs. Gender', xlab='Gender', ylab='Time for transformation (months)',ylim=c(0,40))
plot(fullData$Age, fullData$weightChange)
plot(fullData$Height, fullData$weightChange)
plot(fullData$Height, fullData$weightChange, xlim=c(0,90))
plot(fullData$Height, fullData$weightChange, xlim=c(50,90))
plot(fullData$Height, fullData$weightChange, xlim=c(55,90))
plot(fullData$Height, fullData$weightChange, xlim=c(55,90), col=ifelse(fullData$Gender == 'M',1,2))
plot(fullData$Height, fullData$weightChange, xlim=c(55,90), col=ifelse(fullData$Gender == 'M',1,2), xlab='Height (Inches)', ylab='Weight Loss (lbs)', main='Weight Loss Count vs. Height')
